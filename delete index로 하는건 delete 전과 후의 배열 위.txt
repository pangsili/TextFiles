delete index로 하는건 delete 전과 후의 배열 위치가 달라지기 때문에 안된다.

억지로 하는 방법은 있다.


필드 불러오는 방법

Integer boardDisplayFlg = boardDomain.getBoardDispalayFlg();

싱글톤 : 인스턴스 한번만 만듬 == 원본

뒤에서 선언하는 것들은 다들 카피본으로 바꾸거나 해도 원본에는 영향 x 


논리삭제
데이터베이스에서 직접 삭제하는게 아니라
삭제/표시플래그 

1
2
3
4
5      하나가 사라지면 같은 인덱스에 있는 데이터위치가 달라지게 된다.\
그런 문제 를 해결 하려면 삭제가 아니라 데이터는 남기고 표시만 안하는 방식으로도 할 수 있다. 이게 논리삭제

물리삭제 == remove

for문 -- 보드리스트를 다 뒤져본다.

안에서는 파라미터 체크 ,, 바깥에서는 리턴값체크



input // label 속성 차이



//lambda식

얘의 내부적으로 필터를 걸겠다.

람다쓰는이유

한줄만 봐도 filter등이 써져있어 어떤 일을 수행하는지 알기 쉬워서 씀

가독성 좋고 소스를 짧게 쓸 수 있음.


sort // comparator == 정렬하기

함수형 프로그래밍 (패러다임)


자판기 


프로그래밍 = 레고 조립이다.


객체란? = 오브젝트 -- 한마디로 "물건"

ex) 종이휴지
재활용 종이 휴지
곽휴지
두루마리 휴지


객체지향이란?



상속이란?












